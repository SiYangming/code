"0","# XGBoost on Otto dataset, tune subsample"
"0","from pandas import read_csv  "
"0","from xgboost import XGBClassifier  "
"0","from sklearn.model_selection import GridSearchCV  "
"0","from sklearn.model_selection import StratifiedKFold  "
"0","from sklearn.preprocessing import LabelEncoder  "
"0","import matplotlib  "
"0","matplotlib.use('Agg')  "
"0","from matplotlib import pyplot  "
"0","# load data  "
"0","data = read_csv('train.csv')  "
"0","dataset = data.values  "
"0","# split data into X and y  "
"0","X = dataset[:,0:94]  "
"0","y = dataset[:,94]  "
"0","# encode string class values as integers  "
"0","label_encoded_y = LabelEncoder().fit_transform(y)  "
"0","# grid search  "
"0","model = XGBClassifier()  "
"0","subsample = [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 1.0]  "
"0","param_grid = dict(subsample=subsample)  "
"0","kfold = StratifiedKFold(n_splits=10, shuffle=True, random_state=7)"
"0","grid_search = GridSearchCV(model, param_grid, scoring=""neg_log_loss"", n_jobs=-1, cv=kfold)"
"0","grid_result = grid_search.fit(X, label_encoded_y)  "
"0","# summarize results  "
"0","print(""Best: %f using %s"" % (grid_result.best_score_, grid_result.best_params_))"
"1","Best: -0.000492 using {'subsample': 0.4}
"
